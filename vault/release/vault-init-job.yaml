---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-init-script
  namespace: vault
data:
  entrypoint.sh: |-
    #!/bin/bash

    yum install jq -y;
    echo "give vault pods to come up -- in 10 seconds"
    sleep 10
    echo "Get vault Status"
    VAULT_INITIALIZED=$(curl https://vault-internal:8200/v1/sys/health --insecure | jq '.initialized')
    echo "vault initialization status is ${VAULT_INITIALIZED}"
    if [[ $VAULT_INITIALIZED = 'true' ]]; then
        echo "vault already initialized."
    elif [[ $VAULT_INITIALIZED = 'false' ]]; then
        echo "Initialize vault" 
        curl --location --request POST https://vault-internal:8200/v1/sys/init --header \
              'Content-Type: text/plain' --data-raw \
              '{
                  "secret_shares": 3,
                  "secret_threshold": 5,
                  "recovery_shares": 3,
                  "recovery_threshold": 3
              }' \
              --insecure > vault_secret.json
        echo "Vault Initialized"
        echo $(cat vault_secret.json)
        echo "Copy to S3"
        aws s3 cp  ./vault_secret.json s3://$S3_BUCKET/vault/
    else
        
        echo "failing the script so that job runs once more"
        exit 1
    fi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: vault
spec:
  template:
    spec:
      containers:
        - name: vault-init
          image: amazon/aws-cli:2.4.23
          command:
            - /script/entrypoint.sh
          volumeMounts:
            - name: init-script
              mountPath: /script
      restartPolicy: Never
      volumes:
        - name: init-script
          configMap:
            defaultMode: 0700
            name: vault-init-script
      serviceAccount: vault
  backoffLimit: 4
